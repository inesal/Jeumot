private List<string> mots;

        public Dictionnaire(string cheminFichier)
        {
            mots = new List<string>();
            ChargerMots(cheminFichier);
            Tri_quicksort(0, mots.Count - 1);
        }

        private void ChargerMots(string cheminFichier)
        {
            try
            {
                string contenuFichier = File.ReadAllText(cheminFichier);
                mots = contenuFichier.Split(' ').Select(m => m.Trim()).ToList();
            }
            catch (Exception e)
            {
                Console.WriteLine($"Erreur lors du chargement du dictionnaire : {e.Message}");
            }
        }

        public override string ToString()
        {
            return $"Dictionnaire contenant {mots.Count} mots.";
        }

        public bool RechDichoRecursif(string mot)
        {
            return RechDichoRecursif(mot, 0, mots.Count - 1);
        }

        private bool RechDichoRecursif(string mot, int debut, int fin)
        {
            if (debut > fin)
            {
                return false;
            }

            int milieu = (debut + fin) / 2;

            if (mots[milieu].Equals(mot, StringComparison.OrdinalIgnoreCase))
            {
                return true;
            }

            if (string.Compare(mot, mots[milieu], StringComparison.OrdinalIgnoreCase) < 0)
            {
                return RechDichoRecursif(mot, debut, milieu - 1);
            }
            else
            {
                return RechDichoRecursif(mot, milieu + 1, fin);
            }
        }
